trigger:
  branches:
    include:
      - main  # Adjust to the branch you want to trigger builds on

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Dynamically compute the version
  - script: |
      YEAR=$(date +%Y)
      MONTH=$(date +%m)
      DAY=$(date +%d)
      REV=${BUILD_BUILDID}
      VERSION="1.0.0-$YEAR$MONTH$DAY.$REV"
      echo "Computed version: $VERSION"
      echo "##vso[task.setvariable variable=version]$VERSION"
    displayName: 'Compute Version'

  # Step 1: Install Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'  # Specify Node.js version, such as 14.x or 16.x
    displayName: 'Install Node.js'

  # Step 2: Install Dependencies
  - script: |
      npm install
    displayName: 'Install Node.js Dependencies'

  # Optional Step 3: Run Build Command
  # Skip this step if there is no build process
  # Uncomment if you add a build process to the application in the future
  # - script: |
  #     npm run build
  #   displayName: 'Build Application'
  #   condition: succeeded()  # Only run if the previous steps succeeded

  # Authenticate with Azure DevOps using the PAT token
  - script: |
      echo $(naga-pat) | az devops login --organization https://dev.azure.com/CloudBuildersTech/
    displayName: 'Authenticate Azure DevOps CLI'

  # Package and publish artifacts with versioning
  - script: |
      mkdir -p $(Build.ArtifactStagingDirectory)
      # Assuming you have files you want to package, such as build output
      cp -R * $(Build.ArtifactStagingDirectory)
      az artifacts universal publish \
        --organization https://dev.azure.com/CloudBuildersTech/ \
        --project "CB-CommonProject" \
        --scope project \
        --feed testing-credo \
        --name my-first-package \
